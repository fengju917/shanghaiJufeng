package com.centerm.lklcpos.settings.activity;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;

import com.centerm.comm.persistence.dao.ParamConfigDao;
import com.centerm.comm.persistence.impl.ParamConfigDaoImpl;
import com.centerm.lklcpos.activity.BaseActivity;
import com.centerm.lklcpos.transaction.entity.Shortcut;
import com.centerm.lklcpos.transaction.entity.Transaction;
import com.centerm.lklcpos.util.DialogFactory;
import com.centerm.lklcpos.util.Utility;
import com.centerm.lklcpos.view.MenuGridAdapter;
import com.lkl.farmerwithdrawals.R;

public class IcCardParamManager extends BaseActivity {

	private ParamConfigDao paramConfig;
	private View lastview;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.reprintmainactivity);

		inititle();

		paramConfig = new ParamConfigDaoImpl(this);
		final ListView gridView = (ListView) this.findViewById(R.id.gridView);
		List<Shortcut> shortcut = new ArrayList<Shortcut>();
		// 公钥下载
		Shortcut view1 = new Shortcut(this,
				R.drawable.settings_posmanager_pos_btn,
				R.string.pulic_key_download, "transcation/M900005.xml");
		shortcut.add(view1);
		// 参数下载
		Shortcut view2 = new Shortcut(this, R.drawable.manage_download,
				R.string.param_download, "transcation/M900006.xml");
		shortcut.add(view2);
		// 打印参数
		Shortcut view3 = new Shortcut(this, R.drawable.param_print_style,
				R.string.print_param, "transcation/M900006.xml");
		shortcut.add(view3);

		// 清除内核日志
		Shortcut view4 = new Shortcut(this, R.drawable.clear_core_log_style,
				R.string.clear_core_log, "transcation/M900006.xml");
		shortcut.add(view4);

		// 通过串口下载
		Shortcut view5 = new Shortcut(this,
				R.drawable.download_by_serialport_style,
				R.string.download_by_serialport, "transcation/M900006.xml");
		shortcut.add(view5);

		MenuGridAdapter adapter = new MenuGridAdapter(IcCardParamManager.this,
				shortcut, true);
		gridView.setAdapter(adapter);

		gridView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> arg0, View arg1,
					int position, long arg3) {
				if (lastview != null) {
					lastview.setBackgroundColor(Color.WHITE);
				}
				arg1.setBackgroundColor(Color.BLUE);
				lastview = arg1;
				Shortcut shortcut = null;
				Intent intent = null;
				Transaction transaction = null;
				switch (position) {
				case 0:
					if (!Utility.getSignStatus(IcCardParamManager.this)) {
						DialogFactory.showTips(IcCardParamManager.this, "请先签到");
						return;
					}
					paramConfig.update("updatastatus", ""); // 标志开始更新公钥、AID参数
					shortcut = (Shortcut) gridView.getItemAtPosition(position);
					intent = shortcut.getmIntent();
					transaction = intent.getParcelableExtra("transaction");
					transaction.setProperties("settings");
					intent.putExtra("transaction", transaction); // 组件之间传递交易流程对象
					startActivity(intent);
					addActivityAnim();
					break;
				case 1:
					if (!Utility.getSignStatus(IcCardParamManager.this)) {
						DialogFactory.showTips(IcCardParamManager.this, "请先签到");
						return;
					}
					paramConfig.update("updatastatus", ""); // 标志开始更新公钥、AID参数
					shortcut = (Shortcut) gridView.getItemAtPosition(position);
					intent = shortcut.getmIntent();
					transaction = intent.getParcelableExtra("transaction");
					transaction.setProperties("settings");
					intent.putExtra("transaction", transaction); // 组件之间传递交易流程对象
					startActivity(intent);
					addActivityAnim();
					break;
				case 2:
					DialogFactory.showTips(IcCardParamManager.this, "该功能暂未开放");
					break;
				case 3:
					DialogFactory.showTips(IcCardParamManager.this, "该功能暂未开放");
					break;
				case 4:
					DialogFactory.showTips(IcCardParamManager.this, "该功能暂未开放");
					break;
				}
			}

		});
	}

}
